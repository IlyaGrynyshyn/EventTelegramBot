from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.types import CallbackQuery, LabeledPrice
from data import config
from keyboards.default import menu
from keyboards.inline import type_of_visit
from loader import dp, db, bot
from data.items import item1
from states.will_online_state import Will_Online


@dp.message_handler(text='ü§ù –í–∑—è—Ç–∏ —É—á–∞—Å—Ç—å')
async def take_part(message: types.Message):
    await message.answer('ü§î –Ø–∫ —Ç–∏ –ø–ª–∞–Ω—É—î—à –≤—ñ–¥–≤—ñ–¥–∞—Ç–∏ –∑–∞—Ö—ñ–¥?', reply_markup=type_of_visit)


@dp.callback_query_handler(lambda c: c.data == 'will_come')
async def will_come(call: CallbackQuery):
    db.update_type_visit('offline', call.from_user.id)
    await call.message.answer(
        f'''
        –ë—É—Ç–∏ –æ—Ñ–ª–∞–π–Ω - —Ü–µ —Ç–≤—ñ–π –Ω–∞–π–∫—Ä–∞—â–∏–π –≤–Ω–µ—Å–æ–∫ —É —Å–≤—ñ–π —Ä–æ–∑–≤–∏—Ç–æ–∫, –ø–æ—Ç—Ä–∞–ø–∏—Ç–∏ –≤ —ñ–Ω—Ñ–æ–ø–æ–ª–µ —Ç–∞–∫–∏—Ö –∂–µ —è—Å–∫—Ä–∞–≤–∏—Ö –¥—ñ–≤—á–∞—Ç, –æ—Ç—Ä–∏–º–∞—Ç–∏ –±–µ–∑—Ü—ñ–Ω–Ω–∏–π –¥–æ—Å–≤—ñ–¥ —ñ –Ω–∞—Ä–µ—à—Ç—ñ –±–ª–∏–∂—á–µ –ø–æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—å –∑ —Ä–æ–∑–≤–∏—Ç–∫–æ–º –≤ —Å–æ—Ü –º–µ—Ä–µ–∂–∞—Ö. 

–¢–≤—ñ–π –≤—Ö—ñ–¥–Ω–∏–π –∫–≤–∏—Ç–æ–∫ –∫–æ—à—Ç—É–≤–∞—Ç–∏–º–µ 777 –≥—Ä–∏–≤–µ–Ω—åü™Ñ

üí≥ –û–ø–ª–∞—Ç–∏—Ç–∏ —Ç–∏ –º–æ–∂–µ—à –Ω–∞—Ç–∏—Å–Ω—É–≤—à–∏ –Ω–∏–∂—á–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—Ç–∏
        ''', reply_markup=menu
    )
    await call.answer(cache_time=30)
    await bot.send_invoice(call.from_user.id,
                           **item1.generate_invoice(), payload='123')


@dp.callback_query_handler(lambda c: c.data == 'will_online')
async def will_online(call: CallbackQuery):
    await call.answer(cache_time=30)
    db.update_type_visit('online', call.from_user.id)
    await call.message.answer(
       f"""
       –ú–∏ —Ä–∞–¥—ñ —Ç–≤–æ—ó–π —É—á–∞—Å—Ç—ñ, –Ω–∞–≤—ñ—Ç—å —è–∫—â–æ –Ω–µ –∑–º–æ–∂–µ–º–æ –ø–æ–±–∞—á–∏—Ç–∏ —Ç–∞ –æ–±—ñ–π–Ω—è—Ç–∏ —Ç–µ–±–µ, –∞–ª–µ –±—É–¥–µ–º–æ –∑–Ω–∞—Ç–∏, —à–æ —Ç–∏ –ø—Ä–∏—Å—É—Ç–Ω—è –Ω–∞ –∑–∞—Ö–æ–¥—ñ –û–ù–õ–ê–ô–ùüî•

–ú–∏ –ø–∞–º‚Äô—è—Ç–∞—î–º–æ, —â–æ –≤—Å—ñ –Ω–∞—à—ñ –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ —Å—Ç–∞—é—Ç—å—Å—è –∑–∞–≤–¥—è–∫–∏ –ó–°–£, —Å–∞–º–µ —Ç–æ–º—É —Ü—ñ–Ω—É –∑–∞ —Ç–∞–∫–∏–π –æ–Ω–ª–∞–π–Ω —Ñ–æ—Ä–º–∞—Ç –æ–±–∏—Ä–∞—î—Ç–µ –≤–∏.
–ü—ñ—Å–ª—è –∑–∞—Ö–æ–¥—É –º–∏ –ø–µ—Ä–µ–¥–∞–º–æ –¥–æ–Ω–∞—Ç–∏ –Ω–∞ –ó–°–£ —Ç–∞ –≤—ñ–¥–∑–≤—ñ—Ç—É—î–º–æ‚ù£Ô∏è

–ù–∞–ø–∏—à–∏ –º–µ–Ω—ñ —Å—É–º—É –≤–Ω–µ—Å–∫—É ‚ú®
       """, reply_markup=types.ReplyKeyboardRemove())
    await Will_Online.Q1.set()


@dp.message_handler(state=Will_Online.Q1)
async def get_amount(message: types.Message, state: FSMContext):
    try:
        amount = int(message.text)
        formating = int(str(amount) + "00")
        if amount < 49:
            await message.answer('–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ —Å—É–º–∞ 50 –≥—Ä–Ω')
        else:
            await state.update_data(amount=amount)
            await bot.send_invoice(message.from_user.id,
                                   title='–ö–≤–∏—Ç–æ–∫ –æ–Ω–ª–∞–π–Ω "The Power of Identity"',
                                   currency="UAH",
                                   description='–í—Ö—ñ–¥–Ω–∏–π –∫–≤–∏—Ç–æ–∫ –Ω–∞ –æ–Ω–ª–∞–π–Ω –¥–æ—Å—Ç—É–ø –∑–∞—Ö–æ–¥—É "The Power of Identity"',
                                   prices=[
                                       LabeledPrice(
                                           label='–í—Ö—ñ–¥–Ω–∏–π –∫–≤–∏—Ç–æ–∫',
                                           amount=formating
                                       )
                                   ], start_parameter='create_invoice_will_come',
                                   need_phone_number=True,
                                   provider_token=config.PROVIDER_TOKEN,
                                   payload='11223')
            await state.finish()
    except ValueError:
        await message.answer('–í–∏ –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω—É —Å—É–º—É. ')


@dp.pre_checkout_query_handler()
async def process_pre_checkout_query(query: types.PreCheckoutQuery):
    await bot.answer_pre_checkout_query(pre_checkout_query_id=query.id, ok=True)
    db.update_is_pay(query.from_user.id)
    message_text = """
    –û–ø–ª–∞—Ç–∞ –ø—Ä–æ–π—à–ª–∞ —É—Å–ø—ñ—à–Ω–æ‚ù§Ô∏è‚Äçüî•

ü§ó –ú–∏ —Ä–∞–¥—ñ, —â–æ —Ç–∏ –ø—Ä–∏—î–¥–Ω–∞—î—à—Å—è –¥–æ –Ω–∞—à–æ–≥–æ –∑–∞—Ö–æ–¥—É.

–¢–µ–ø–µ—Ä —Ç–≤—ñ–π –∫–≤–∏—Ç–æ–∫ üéüÔ∏è –±—É–¥–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π —É —Ä–æ–∑–¥—ñ–ª—ñ *–ú—ñ–π –∫–≤–∏—Ç–æ–∫*

ü™Ñ–ü—Ä–∏—î–¥–Ω—É–π—Å—è –¥–æ –Ω–∞—à–æ–≥–æ —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª—É —Ç–∞ —Å–ª—ñ–¥–∫—É–π –∑–∞ —É—Å—ñ–º–∞ –Ω–æ–≤–∏–Ω–∞–º–∏: https://t.me/+LP5wYwzkN9xmYzM6
    """
    await bot.send_message(chat_id=query.from_user.id, text=message_text, reply_markup=menu)
