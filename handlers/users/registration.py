from aiogram.dispatcher import FSMContext
from keyboards.default import menu
from keyboards.inline import type_of_visit
from loader import dp, db
from aiogram import types
import re


@dp.message_handler(state='registration_phone')
async def contact(message, state: FSMContext):
    if re.match(r'^\+380\d{9}$', str(message.text)):
        await message.answer('‚úâÔ∏è –ù–∞–¥—ñ—à–ª–∏ –º–µ–Ω—ñ —Å–≤–æ—é –ø–æ—à—Ç—É')
        # phonenumber = str(message.contact.phone_number)
        await db.update_phone(phone=str(message.text), telegram_id=message.from_user.id)
        await state.set_state('registration_email')
    else:
        await message.answer('‚ùóÔ∏è–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —Å–≤—ñ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É —É —Ñ–æ—Ä–º–∞—Ç—ñ +380XXXXXXXXX')


@dp.message_handler(state='registration_email')
async def enter_email(message: types.Message, state: FSMContext):
    email = message.text
    if re.match(r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$', email):
        await db.update_email(email=email, telegram_id=message.from_user.id)
        message_text = """
        –î—è–∫—É—î–º–æ, —â–æ –∑–∞–ª–∏—à–∏–ª–∞ —Å–≤–æ—ó –¥–∞–Ω—ñ.
    –ê —Ç–µ–ø–µ—Ä –æ–±–µ—Ä–∏ –≤–∞—Ä—ñ–∞–Ω—Ç —è–∫ —Ç–∏ –ø–ª–∞–Ω—É—î—à –≤—ñ–¥–≤—ñ–¥–∞—Ç–∏ –Ω–∞—à –∑–∞—Ö—ñ–¥ü™Ñ?
        """
        await message.answer(text=message_text, reply_markup=menu)
        await message.answer('ü§î –Ø–∫ —Ç–∏ –ø–ª–∞–Ω—É—î—à –≤—ñ–¥–≤—ñ–¥–∞—Ç–∏ –∑–∞—Ö—ñ–¥?', reply_markup=type_of_visit)
        await state.finish()
    else:
        await message.answer('‚ùóÔ∏è–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —Å–≤—ñ–π email –≤ —Ñ–æ—Ä–º–∞—Ç—ñ example@ex.com')

