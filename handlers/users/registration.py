from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.builtin import CommandStart, Command

from keyboards.default import menu
from loader import dp, db
from aiogram import types


# @dp.message_handler(state='registration_phone')
# async def get_phone(message: types.Message, state: FSMContext):
#     await message.answer('–ü—Ä–∏—à–ª–∏ –º–µ–Ω—ñ —Å–≤—ñ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É')
#     await state.set_state('registration_phone')


# @dp.message_handler(state='registration_phone')
# async def enter_phone(message: types.Message, state: FSMContext):
#     phone = message.text
#     await message.answer('‚úâÔ∏è –ü—Ä–∏—à–ª–∏ –º–µ–Ω—ñ —Å–≤–æ—é –ø–æ—à—Ç—É')
#     await state.set_state('registration_email')


@dp.message_handler(content_types=['contact'], state='registration_phone')
async def contact(message, state: FSMContext):
    if message.contact is not None:
        keyboard2 = types.ReplyKeyboardRemove()
        await message.answer('‚úâÔ∏è –ü—Ä–∏—à–ª–∏ –º–µ–Ω—ñ —Å–≤–æ—é –ø–æ—à—Ç—É', reply_markup=keyboard2)
        phonenumber = str(message.contact.phone_number)
        db.update_phone(phone=phonenumber, telegram_id=message.from_user.id)
        await state.set_state('registration_email')


@dp.message_handler(state='registration_email')
async def enter_email(message: types.Message, state: FSMContext):
    email = message.text
    db.update_email(email=email, telegram_id=message.from_user.id)
    message_text = """
    –î—è–∫—É—î–º–æ ü§ç
–¢–∏ –≤–∂–µ –∑—Ä–æ–±–∏–≤ –ø–µ—Ä—à–∏–π –∫—Ä–æ–∫ –¥–æ –∑–º—ñ–Ω, –º–∏ —Ç–∞–∫ –ø–∏—à–∞—î–º–æ—Å—å —Ç–æ–±–æ—é!

–Ø–∫—â–æ —Ö–æ—á–µ—à –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏, –µ–∫—Å–∫–ª—é–∑–∏–≤–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –≤—ñ–¥ –ù–∞—Å—Ç—ñ, –¥–æ–ª—É—á–∞–π—Å—è –¥–æ –∫–∞–Ω–∞–ª—É —ñ–Ω—Ç–µ–Ω—Å–∏–≤—É:

https://t.me/+fVYobL82-5I1Mjky

–í –¥–µ–Ω—å —ñ–Ω—Ç–µ–Ω—Å–∏–≤—É –∑–∞ 5 —Ö–≤–∏–ª–∏–Ω –¥–æ –ø–æ—á–∞—Ç–∫—É –º–∏ –¥–∞–º–æ —Ç–æ–±—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —ñ–Ω—Ç–µ–Ω—Å–∏–≤, —Ç–æ–º—É –±—É–¥—å –ª–∞—Å–∫–∞, –Ω–µ –ø–æ–ª–∏—à–∞–π —Ü–µ–π –±–æ—Ç üôåüèª

–ó–∞–ø–∏—Å —ñ–Ω—Ç–µ–Ω—Å–∏–≤—É –±—É–¥–µ, –∞–ª–µ —Ä–∞–¥–∏–º–æ –¥–æ—î–¥–Ω–∞—Ç–∏—Å—å –æ–Ω–ª–∞–π–Ω, —â–æ–± –º–∞—Ç–∏ –∑–º–æ–≥—É –ø–æ—Å—Ç–∞–≤–∏—Ç–∏ –ù–∞—Å—Ç—ñ —Å–≤–æ—ó –∑–∞–ø–∏—Ç–∞–Ω–Ω—è —Ç–∞ –æ—Ç—Ä–∏–º–∞—Ç–∏ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –ø–µ—Ä—à–∏–º –¥–æ—î–¥–Ω–∞—Ç–∏—Å—å –¥–æ –≤–µ–ª–∏–∫–æ–≥–æ –∫—É—Ä—Å—É –∑–∞ –Ω–∞–π–Ω–∏–∂—á–æ—é —Ü—ñ–Ω–æ—é üí™üèªüî•
    """
    await message.answer(text=message_text, reply_markup=menu)
    await state.finish()
